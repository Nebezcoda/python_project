from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart
from aiogram.types import (KeyboardButton, Message, ReplyKeyboardMarkup,
                           ReplyKeyboardRemove)

# –í–º–µ—Å—Ç–æ BOT TOKEN HERE –Ω—É–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞,
# –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —É @BotFather
BOT_TOKEN = ''

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∫–Ω–æ–ø–æ–∫
# button_1 = KeyboardButton(text='–°–æ–±–∞–∫ ü¶Æ')
# button_2 = KeyboardButton(text='–û–≥—É—Ä—Ü–æ–≤ ü•í')

# # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –¥–æ–±–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ –∫–Ω–æ–ø–∫–∏
# keyboard = ReplyKeyboardMarkup(
#     keyboard=[[button_1, button_2]],
#     resize_keyboard=True,
#     one_time_keyboard=True
# )

# –ü—Ä–∏–º–µ—Ä 1. –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ 3-—Ö —Ä—è–¥–æ–≤ –∫–Ω–æ–ø–æ–∫ –ø–æ 3 –∫–Ω–æ–ø–∫–∏ –≤ –∫–∞–∂–¥–æ–º —Ä—è–¥—É.
# # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∫–Ω–æ–ø–æ–∫
# button_1 = KeyboardButton(text='–ö–Ω–æ–ø–∫–∞ 1')
# button_2 = KeyboardButton(text='–ö–Ω–æ–ø–∫–∞ 2')
# button_3 = KeyboardButton(text='–ö–Ω–æ–ø–∫–∞ 3')
# button_4 = KeyboardButton(text='–ö–Ω–æ–ø–∫–∞ 4')
# button_5 = KeyboardButton(text='–ö–Ω–æ–ø–∫–∞ 5')
# button_6 = KeyboardButton(text='–ö–Ω–æ–ø–∫–∞ 6')
# button_7 = KeyboardButton(text='–ö–Ω–æ–ø–∫–∞ 7')
# button_8 = KeyboardButton(text='–ö–Ω–æ–ø–∫–∞ 8')
# button_9 = KeyboardButton(text='–ö–Ω–æ–ø–∫–∞ 9')

# # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –¥–æ–±–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ –∫–Ω–æ–ø–∫–∏
# my_keyboard = ReplyKeyboardMarkup(
#     keyboard=[[button_1, button_2, button_3],
#               [button_4, button_5, button_6],
#               [button_7, button_8, button_9]],
#     resize_keyboard=True
# )

# keyboard: list[list[KeyboardButton]] = [[KeyboardButton(
#     text=f'–ö–Ω–æ–ø–∫–∞ {j * 3 + i}') for i in range(1, 4)] for j in range(3)]

# # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –¥–æ–±–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ –∫–Ω–æ–ø–∫–∏
# my_keyboard = ReplyKeyboardMarkup(
#     keyboard=keyboard,
#     resize_keyboard=True
# )

# –ü—Ä–∏–º–µ—Ä 2. –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏–∑ 9 –∫–Ω–æ–ø–æ–∫ –≤ 5 —Ä—è–¥–∞—Ö:
# # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏
# buttons: list[KeyboardButton] = [
#     KeyboardButton(text=f'–ö–Ω–æ–ø–∫–∞ {i}') for i in range(1, 10)]

# # –°–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤ –¥–ª—è –±—É–¥—É—â–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
# keyboard: list[list[KeyboardButton]] = [
#     [buttons[0]],
#     buttons[1:3],
#     buttons[3:6],
#     buttons[6:8],
#     [buttons[8]]
# ]

# # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –¥–æ–±–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏
# my_keyboard = ReplyKeyboardMarkup(
#     keyboard=keyboard,
#     resize_keyboard=True
# )

# –ü—Ä–∏–º–µ—Ä 3. 2 —Ä—è–¥–∞ –∫–Ω–æ–ø–æ–∫ –ø–æ 30 –∫–Ω–æ–ø–æ–∫ –≤ –∫–∞–∂–¥–æ–º —Ä—è–¥—É.
# # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏
# buttons_1: list[KeyboardButton] = [
#     KeyboardButton(text=f'–ö–Ω–æ–ø–∫–∞ {i}') for i in range(1, 31)]

# # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏
# buttons_2: list[KeyboardButton] = [
#     KeyboardButton(text=f'–ö–Ω–æ–ø–∫–∞ {i}') for i in range(31, 61)]

# # –°–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤ –¥–ª—è –±—É–¥—É—â–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
# keyboard: list[list[KeyboardButton]] = [buttons_1,
#                                         buttons_2]

# # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏
# buttons_1: list[KeyboardButton] = [
#     KeyboardButton(text=f'{i}') for i in range(1, 31)]

# # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏
# buttons_2: list[KeyboardButton] = [
#     KeyboardButton(text=f'{i}') for i in range(31, 61)]

# # –°–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤ –¥–ª—è –±—É–¥—É—â–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
# keyboard: list[list[KeyboardButton]] = [buttons_1,
#                                         buttons_2]

# my_keyboard = ReplyKeyboardMarkup(
#     keyboard=keyboard,
#     resize_keyboard=True
# )

# –ü—Ä–∏–º–µ—Ä 4. –ü—ã—Ç–∞–µ–º—Å—è —Å–¥–µ–ª–∞—Ç—å 100 —Ä—è–¥–æ–≤ –ø–æ 12 –∫–Ω–æ–ø–æ–∫ –≤ –∫–∞–∂–¥–æ–º.
# buttons: list[KeyboardButton] = []
# keyboard: list[list[KeyboardButton]] = []

# # –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–∞–º–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏
# for i in range(1, 1201):
#     buttons.append(KeyboardButton(text=str(i)))
#     if not i % 12:
#         keyboard.append(buttons)
#         buttons = []

# # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –¥–æ–±–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏
# my_keyboard = ReplyKeyboardMarkup(
#     keyboard=keyboard,
#     resize_keyboard=True
# )


# –ü—Ä–∏–º–µ—Ä 5. –ü—ã—Ç–∞–µ–º—Å—è —Å–¥–µ–ª–∞—Ç—å 350 —Ä—è–¥–æ–≤ –∫–Ω–æ–ø–æ–∫ –ø–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ –∫–∞–∂–¥–æ–º —Ä—è–¥—É.
# –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–∞–º–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏
keyboard: list[list[KeyboardButton]] = [
    [KeyboardButton(text=f'–ö–Ω–æ–ø–∫–∞ {i}')] for i in range(1, 351)]

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –¥–æ–±–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏
my_keyboard = ReplyKeyboardMarkup(
    keyboard=keyboard,
    resize_keyboard=True
)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/start"
# –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ —á–∞—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
@dp.message(CommandStart())
async def process_start_command(message: Message):
    await message.answer(
        text='–ß–µ–≥–æ –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è –±–æ–ª—å—à–µ?',
        # reply_markup=keyboard
        reply_markup=my_keyboard
    )


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–≤–µ—Ç "–°–æ–±–∞–∫ ü¶Æ" –∏ —É–¥–∞–ª—è—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
@dp.message(F.text == '–°–æ–±–∞–∫ ü¶Æ')
async def process_dog_answer(message: Message):
    await message.answer(
        text='–î–∞, –Ω–µ—Å–æ–º–Ω–µ–Ω–Ω–æ, –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è —Å–æ–±–∞–∫. '
             '–ù–æ –≤—ã –≤–∏–¥–µ–ª–∏ –∫–∞–∫ –æ–Ω–∏ –±–æ—è—Ç—Å—è –æ–≥—É—Ä—Ü–æ–≤?'
    )


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–≤–µ—Ç "–û–≥—É—Ä—Ü–æ–≤ ü•í" –∏ —É–¥–∞–ª—è—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
@dp.message(F.text == '–û–≥—É—Ä—Ü–æ–≤ ü•í')
async def process_cucumber_answer(message: Message):
    await message.answer(
        text='–î–∞, –∏–Ω–æ–≥–¥–∞ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –æ–≥—É—Ä—Ü–æ–≤ '
             '–∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è –±–æ–ª—å—à–µ'
    )



if __name__ == '__main__':
    dp.run_polling(bot)